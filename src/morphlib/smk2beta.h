typedef struct {
	char keystring[12];
	int  keycode;
} Xlit;

typedef struct {
	char keystring[12];
	int  keycode;
} Xlit_Smarta;


static Xlit Beta_SMK[] = {
	"a)/",	0220,
	"a)\\",	0222,
	"a)=",	0224,
	"a(/",	0221,
	"a(\\",	0223,
	"a(=",	0225,
	"a/",	0213,
	"a\\",	0214,
	"a=",	0215,
	"a)",	0216,
	"a(",	0217,

	"a|",	046,
	"a/|",	0226,
	"a\\|",	0227,
	"a=|",	0230,
	"a)|",	0231,
	"a(|",	0232,
	"a)/|",	0233,
	"a(/|",	0234,
	"a)\\|",	0236,
	"a(\\|",	0236,
	"a)=|",	0237,
	"a(=|",	0240,

	"*b",	'B',
	"*=",	0202,
	"*)",	0203,
	"*(",	0204,
	"*)/",	0205,
	"*(/",	0206,
	"*)\\",	0207,
	"*(\\",	0210,
	"*)=",	0211,
	"*(=",	0212,

	"*g",	'G',
	"*d",	'D',
	
	"e)/",	0246,
	"e)\\",	0250,
	"e(/",	0247,
	"e(\\",	0251,
	"e/",	0241,
	"e\\",	0242,
	"e)",	0244,
	"e(",	0245,

	"h)/",	0263,
	"h)\\",	0265,
	"h)=",	0267,
	"h(/",	0264,
	"h(\\",	0266,
	"h(=",	0270,
	"h/",	0256,
	"h\\",	0257,
	"h=",	0260,
	"h)",	0261,
	"h(",	0262,

	"h|",	0372,
	"h/|",	0271,
	"h\\|",	0272,
	"h=|",	0273,
	"h)|",	0274,
	"h(|",	0275,
	"h)/|",	0276,
	"h(/|",	0277,
	"h)\\|",	0300,
	"h(\\|",	0301,
	"h)=|",	0302,
	"h(=|",	0303,
	
	"*z",	'Z',
	"*q",	'Y',

	"i)/",	0340,
	"i)\\",	0342,
	"i)=",	0344,
	"i(/",	0341,
	"i(\\",	0343,
	"i(=",	0345,
	"i+",	0363,
	"i/+",	0375,
	"i\\+",	0376,
	"i/",	0333,
	"i\\",	0334,
	"i=",	0335,
	"i)",	0336,
	"i(",	0337,

	"*k",	'K',
	"*l",	'L',
	"*m",	'M',
	"*n",	'N',
	"*c",	'C',
	
	"o)/",	0366,
	"o)\\",	0370,
	"o(/",	0367,
	"o(\\",	0371,
	"o/",	0361,
	"o\\",	0362,
	"o)",	0364,
	"o(",	0365,

	"*p",	'P',

	"r(",	075,

	"*s",	'S',
	"*t",	'T',

	"u)/",	0353,
	"u)\\",	0355,
	"u)=",	0357,
	"u(/",	0354,
	"u(\\",	0356,
	"u(=",	0360,
	"u+",	043,
	"u/+",	0100,
	"u\\+",	0347,
	"u/",	0346,
	"u\\",	0347,
	"u=",	0350,
	"u)",	0351,
	"u(",	0352,
	"*f",	'F',
	"*y",	'C',
	"*x",	'X',

	"w)/",	0312,
	"w)\\",	0314,
	"w)=",	0316,
	"w(/",	0313,
	"w(\\",	0315,
	"w(=",	0317,
	"w/",	0305,
	"w\\",	0306,
	"w=",	0307,
	"w)",	0310,
	"w(",	0311,


	"w|",	0304,
	"w/|",	0320,
	"w\\|",	0321,
	"w=|",	0322,
	"w)|",	0323,
	"w(|",	0324,
	"w)/|",	0325,
	"w(/|",	0326,
	"w)\\|",	0327,
	"w(\\|",	0330,
	"w)=|",	0331,
	"w(=|",	0332,


	"q",	'y',
	"y",	'c',
	"c",	'j',
	"w",	'v',
	"s",	'w',
	"v",	'W', 		/* digamma */
};

static Xlit Beta_Smarta[] = {
	"a_",	046,
	"a/_",	0226,
	"a\\_",	0227,
	"a=",	0230,
	"a)_",	0231,
	"a(_",	0232,
	"a)/_",	0233,
	"a(/_",	0234,
	"a)\\_",	0236,
	"a(\\_",	0236,
	"a)=",	0237,
	"a(=",	0240,

	"u_",	0304,
	"u/_",	0320,
	"u\\_",	0321,
	"u=",	0322,
	"u)_",	0323,
	"u(_",	0324,
	"u)/_",	0325,
	"u(/_",	0326,
	"u)\\_",	0327,
	"u(\\_",	0330,
	"u)=",	0331,
	"uw(=",	0332,

	"i_",	0372,
	"i/_",	0271,
	"i\\_",	0272,
	"i=",	0273,
	"i)_",	0274,
	"i(_",	0275,
	"i)/_",	0276,
	"i(/_",	0277,
	"i)\\_",	0300,
	"i(\\_",	0301,
	"i)=",	0302,
	"i(=",	0303,
	
	"r(",	0373,
	"%6",	075,

	
};

#define SMK_ALPHA(X) (X=='a'||X=='A'||(X>=0213&&X<=0225))
#define SMK_AISUB(X) (X==046||(X>=0226&&X<=0240))
#define SMK_EPSILON(X) (X=='e'||X=='E'||(X>=0241&&X<=0251))
#define SMK_ETA(X) (X=='h'||X=='H'||(X>=0256&&X<=0270))
#define SMK_EISUB(X) (X==0372||(X>=0271&&X<=0303))
#define SMK_IOTA(X) (X=='i'||X=='I'||(X>=0333&&X<=0345))
#define SMK_OMICRON(X) (X=='o'||X=='O'||(X>=0361&&X<=0371))
#define SMK_UPSILON(X) (X=='u'||X=='U'||(X>=0346&&X<=0360))
#define SMK_WMEGA(X) (X=='v'||X=='V'||(X>=0305&&X<=0317))
#define SMK_WISUB(X) (X==0304 || (X>=0320&&X<=0332)) 
#define SMK_IDIAER(X)  (X==0363 || X==0375 || X==0376)
#define SMK_UDIAER(X)  (X==043 || X==0100 || X==0347)
#define SMK_DIAER(X) (SMK_UDIAER(X) || SMK_IDAER(X))

#define SMK_VOWEL(X) (SMK_ALPHA(X)  || \
	SMK_AISUB(X) || \
	SMK_EPSILON(X) || \
	SMK_ETA(X) || \
	SMK_EISUB(X) || \
	SMK_IOTA(X) || \
	SMK_OMICRON(X) || \
	SMK_UPSILON(X) || \
	SMK_WMEGA(X) || \
	SMK_WISUB(X) || \
	SMK_IDIAER(X) || \
	SMK_UDIAER(X) )

#define SYNIZESIS 'X'
#define SMK_LONGMARK '^'
#define SMK_SHORTMARK 0255
